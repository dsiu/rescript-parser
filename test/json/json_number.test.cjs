// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Ava = require("rescript-ava/src/ava.cjs");
var Json = require("./json.cjs");
var Parser = require("../../src/parser.cjs");

function run(param) {
  return Parser.run(Json.number, param);
}

Ava.test("[JSON] Number succeeds", (function (t) {
        var match = Parser.run(Json.number, "1234");
        if (match.TAG === /* Ok */0) {
          var match$1 = match._0;
          var match$2 = match$1[0];
          if (typeof match$2 === "number" || !(match$2.TAG === /* Number */0 && match$2._0 === "1234" && match$1[1] === "")) {
            Ava.fail(t, "Should not succeed otherwise", undefined);
          } else {
            Ava.pass(t, undefined, undefined);
          }
        } else {
          Ava.fail(t, "Should not fail", undefined);
        }
        var match$3 = Parser.run(Json.number, "-1234");
        if (match$3.TAG === /* Ok */0) {
          var match$4 = match$3._0;
          var match$5 = match$4[0];
          if (typeof match$5 === "number" || !(match$5.TAG === /* Number */0 && match$5._0 === "-1234" && match$4[1] === "")) {
            Ava.fail(t, "Should not succeed otherwise", undefined);
          } else {
            Ava.pass(t, undefined, undefined);
          }
        } else {
          Ava.fail(t, "Should not fail", undefined);
        }
        var match$6 = Parser.run(Json.number, "-0");
        if (match$6.TAG === /* Ok */0) {
          var match$7 = match$6._0;
          var match$8 = match$7[0];
          if (typeof match$8 === "number" || !(match$8.TAG === /* Number */0 && match$8._0 === "-0" && match$7[1] === "")) {
            Ava.fail(t, "Should not succeed otherwise", undefined);
          } else {
            Ava.pass(t, undefined, undefined);
          }
        } else {
          Ava.fail(t, "Should not fail", undefined);
        }
        var match$9 = Parser.run(Json.number, "0");
        if (match$9.TAG === /* Ok */0) {
          var match$10 = match$9._0;
          var match$11 = match$10[0];
          if (typeof match$11 === "number" || !(match$11.TAG === /* Number */0 && match$11._0 === "0" && match$10[1] === "")) {
            Ava.fail(t, "Should not succeed otherwise", undefined);
          } else {
            Ava.pass(t, undefined, undefined);
          }
        } else {
          Ava.fail(t, "Should not fail", undefined);
        }
        var match$12 = Parser.run(Json.number, "1234.1234");
        if (match$12.TAG === /* Ok */0) {
          var match$13 = match$12._0;
          var match$14 = match$13[0];
          if (typeof match$14 === "number" || !(match$14.TAG === /* Number */0 && match$14._0 === "1234.1234" && match$13[1] === "")) {
            Ava.fail(t, "Should not succeed otherwise", undefined);
          } else {
            Ava.pass(t, undefined, undefined);
          }
        } else {
          Ava.fail(t, "Should not fail", undefined);
        }
        var match$15 = Parser.run(Json.number, "1234.1e1");
        if (match$15.TAG === /* Ok */0) {
          var match$16 = match$15._0;
          var match$17 = match$16[0];
          if (typeof match$17 === "number" || !(match$17.TAG === /* Number */0 && match$17._0 === "1234.1e1" && match$16[1] === "")) {
            Ava.fail(t, "Should not succeed otherwise", undefined);
          } else {
            Ava.pass(t, undefined, undefined);
          }
        } else {
          Ava.fail(t, "Should not fail", undefined);
        }
        var match$18 = Parser.run(Json.number, "0.12E-6543");
        if (match$18.TAG !== /* Ok */0) {
          return Ava.fail(t, "Should not fail", undefined);
        }
        var match$19 = match$18._0;
        var match$20 = match$19[0];
        if (typeof match$20 === "number" || !(match$20.TAG === /* Number */0 && match$20._0 === "0.12E-6543" && match$19[1] === "")) {
          return Ava.fail(t, "Should not succeed otherwise", undefined);
        } else {
          return Ava.pass(t, undefined, undefined);
        }
      }));

Ava.test("[JSON] Number partially succeeds", (function (t) {
        var match = Parser.run(Json.number, "0.12E-6543hello");
        if (match.TAG === /* Ok */0) {
          var match$1 = match._0;
          var match$2 = match$1[0];
          if (typeof match$2 === "number" || !(match$2.TAG === /* Number */0 && match$2._0 === "0.12E-6543" && match$1[1] === "hello")) {
            Ava.fail(t, "Should not succeed otherwise", undefined);
          } else {
            Ava.pass(t, undefined, undefined);
          }
        } else {
          Ava.fail(t, "Should not fail", undefined);
        }
        var match$3 = Parser.run(Json.number, "111hello");
        if (match$3.TAG === /* Ok */0) {
          var match$4 = match$3._0;
          var match$5 = match$4[0];
          if (typeof match$5 === "number" || !(match$5.TAG === /* Number */0 && match$5._0 === "111" && match$4[1] === "hello")) {
            Ava.fail(t, "Should not succeed otherwise", undefined);
          } else {
            Ava.pass(t, undefined, undefined);
          }
        } else {
          Ava.fail(t, "Should not fail", undefined);
        }
        var match$6 = Parser.run(Json.number, "-533.1hello");
        if (match$6.TAG === /* Ok */0) {
          var match$7 = match$6._0;
          var match$8 = match$7[0];
          if (typeof match$8 === "number" || !(match$8.TAG === /* Number */0 && match$8._0 === "-533.1" && match$7[1] === "hello")) {
            Ava.fail(t, "Should not succeed otherwise", undefined);
          } else {
            Ava.pass(t, undefined, undefined);
          }
        } else {
          Ava.fail(t, "Should not fail", undefined);
        }
        var match$9 = Parser.run(Json.number, "-1234.1..1hello");
        if (match$9.TAG !== /* Ok */0) {
          return Ava.fail(t, "Should not fail", undefined);
        }
        var match$10 = match$9._0;
        var match$11 = match$10[0];
        if (typeof match$11 === "number" || !(match$11.TAG === /* Number */0 && match$11._0 === "-1234.1" && match$10[1] === "..1hello")) {
          return Ava.fail(t, "Should not succeed otherwise", undefined);
        } else {
          return Ava.pass(t, undefined, undefined);
        }
      }));

Ava.test("[JSON] Number fails", (function (t) {
        var match = Parser.run(Json.number, " 1");
        if (match.TAG === /* Ok */0) {
          Ava.fail(t, "Should not succeed", undefined);
        } else {
          Ava.pass(t, undefined, undefined);
        }
        var match$1 = Parser.run(Json.number, " -1");
        if (match$1.TAG === /* Ok */0) {
          Ava.fail(t, "Should not succeed", undefined);
        } else {
          Ava.pass(t, undefined, undefined);
        }
        var match$2 = Parser.run(Json.number, " 0.12E-6543");
        if (match$2.TAG === /* Ok */0) {
          Ava.fail(t, "Should not succeed", undefined);
        } else {
          Ava.pass(t, undefined, undefined);
        }
        var match$3 = Parser.run(Json.number, "a0.12");
        if (match$3.TAG === /* Ok */0) {
          return Ava.fail(t, "Should not succeed", undefined);
        } else {
          return Ava.pass(t, undefined, undefined);
        }
      }));

var P;

var number = Json.number;

exports.P = P;
exports.number = number;
exports.run = run;
/*  Not a pure module */
