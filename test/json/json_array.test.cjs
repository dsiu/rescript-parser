// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Ava = require("rescript-ava/src/ava.cjs");
var Json = require("./json.cjs");
var Parser = require("../../src/parser.cjs");

function run(param) {
  return Parser.run(Json.json, param);
}

function shouldNotPass(param) {
  return "Should not pass with \"" + param[1] + "\" remaining";
}

var shouldNotFail = "Should not fail";

Ava.test("[JSON] Array succeeds", (function (t) {
        var x = Parser.run(Json.json, "[]");
        if (x.TAG === /* Ok */0) {
          var x$1 = x._0;
          var match = x$1[0];
          var exit = 0;
          if (typeof match === "number" || !(match.TAG === /* Array */2 && !(match._0 || x$1[1] !== ""))) {
            exit = 1;
          } else {
            Ava.pass(t, undefined, undefined);
          }
          if (exit === 1) {
            Ava.fail(t, shouldNotPass(x$1), undefined);
          }
          
        } else {
          Ava.fail(t, shouldNotFail, undefined);
        }
        var x$2 = Parser.run(Json.json, "[\"1\"]");
        if (x$2.TAG === /* Ok */0) {
          var x$3 = x$2._0;
          var match$1 = x$3[0];
          var exit$1 = 0;
          if (typeof match$1 === "number" || match$1.TAG !== /* Array */2) {
            exit$1 = 1;
          } else {
            var match$2 = match$1._0;
            if (match$2) {
              var match$3 = match$2.hd;
              if (typeof match$3 === "number" || !(match$3.TAG === /* String */1 && match$3._0 === "1" && !(match$2.tl || x$3[1] !== ""))) {
                exit$1 = 1;
              } else {
                Ava.pass(t, undefined, undefined);
              }
            } else {
              exit$1 = 1;
            }
          }
          if (exit$1 === 1) {
            console.log(Json.toString(x$3[0]));
            Ava.fail(t, shouldNotPass(x$3), undefined);
          }
          
        } else {
          Ava.fail(t, shouldNotFail, undefined);
        }
        var x$4 = Parser.run(Json.json, "[1]");
        if (x$4.TAG === /* Ok */0) {
          var x$5 = x$4._0;
          var match$4 = x$5[0];
          var exit$2 = 0;
          if (typeof match$4 === "number" || match$4.TAG !== /* Array */2) {
            exit$2 = 1;
          } else {
            var match$5 = match$4._0;
            if (match$5) {
              var match$6 = match$5.hd;
              if (typeof match$6 === "number" || !(match$6.TAG === /* Number */0 && match$6._0 === "1" && !(match$5.tl || x$5[1] !== ""))) {
                exit$2 = 1;
              } else {
                Ava.pass(t, undefined, undefined);
              }
            } else {
              exit$2 = 1;
            }
          }
          if (exit$2 === 1) {
            console.log(Json.toString(x$5[0]));
            Ava.fail(t, shouldNotPass(x$5), undefined);
          }
          
        } else {
          Ava.fail(t, shouldNotFail, undefined);
        }
        var x$6 = Parser.run(Json.json, "[1, 2]");
        if (x$6.TAG === /* Ok */0) {
          var x$7 = x$6._0;
          var match$7 = x$7[0];
          var exit$3 = 0;
          if (typeof match$7 === "number" || match$7.TAG !== /* Array */2) {
            exit$3 = 1;
          } else {
            var match$8 = match$7._0;
            if (match$8) {
              var match$9 = match$8.hd;
              if (typeof match$9 === "number" || !(match$9.TAG === /* Number */0 && match$9._0 === "1")) {
                exit$3 = 1;
              } else {
                var match$10 = match$8.tl;
                if (match$10) {
                  var match$11 = match$10.hd;
                  if (typeof match$11 === "number" || !(match$11.TAG === /* Number */0 && match$11._0 === "2" && !(match$10.tl || x$7[1] !== ""))) {
                    exit$3 = 1;
                  } else {
                    Ava.pass(t, undefined, undefined);
                  }
                } else {
                  exit$3 = 1;
                }
              }
            } else {
              exit$3 = 1;
            }
          }
          if (exit$3 === 1) {
            console.log(Json.toString(x$7[0]));
            Ava.fail(t, shouldNotPass(x$7), undefined);
          }
          
        } else {
          Ava.fail(t, shouldNotFail, undefined);
        }
        var x$8 = Parser.run(Json.json, "[1,2]");
        if (x$8.TAG === /* Ok */0) {
          var x$9 = x$8._0;
          var match$12 = x$9[0];
          var exit$4 = 0;
          if (typeof match$12 === "number" || match$12.TAG !== /* Array */2) {
            exit$4 = 1;
          } else {
            var match$13 = match$12._0;
            if (match$13) {
              var match$14 = match$13.hd;
              if (typeof match$14 === "number" || !(match$14.TAG === /* Number */0 && match$14._0 === "1")) {
                exit$4 = 1;
              } else {
                var match$15 = match$13.tl;
                if (match$15) {
                  var match$16 = match$15.hd;
                  if (typeof match$16 === "number" || !(match$16.TAG === /* Number */0 && match$16._0 === "2" && !(match$15.tl || x$9[1] !== ""))) {
                    exit$4 = 1;
                  } else {
                    Ava.pass(t, undefined, undefined);
                  }
                } else {
                  exit$4 = 1;
                }
              }
            } else {
              exit$4 = 1;
            }
          }
          if (exit$4 === 1) {
            console.log(Json.toString(x$9[0]));
            Ava.fail(t, shouldNotPass(x$9), undefined);
          }
          
        } else {
          Ava.fail(t, shouldNotFail, undefined);
        }
        var x$10 = Parser.run(Json.json, "[1, \"2\"]");
        if (x$10.TAG === /* Ok */0) {
          var x$11 = x$10._0;
          var match$17 = x$11[0];
          var exit$5 = 0;
          if (typeof match$17 === "number" || match$17.TAG !== /* Array */2) {
            exit$5 = 1;
          } else {
            var match$18 = match$17._0;
            if (match$18) {
              var match$19 = match$18.hd;
              if (typeof match$19 === "number" || !(match$19.TAG === /* Number */0 && match$19._0 === "1")) {
                exit$5 = 1;
              } else {
                var match$20 = match$18.tl;
                if (match$20) {
                  var match$21 = match$20.hd;
                  if (typeof match$21 === "number" || !(match$21.TAG === /* String */1 && match$21._0 === "2" && !(match$20.tl || x$11[1] !== ""))) {
                    exit$5 = 1;
                  } else {
                    Ava.pass(t, undefined, undefined);
                  }
                } else {
                  exit$5 = 1;
                }
              }
            } else {
              exit$5 = 1;
            }
          }
          if (exit$5 === 1) {
            console.log(Json.toString(x$11[0]));
            Ava.fail(t, shouldNotPass(x$11), undefined);
          }
          
        } else {
          console.log(x$10._0);
          Ava.fail(t, shouldNotFail, undefined);
        }
        var x$12 = Parser.run(Json.json, "[null, \"1\"]");
        if (x$12.TAG === /* Ok */0) {
          var x$13 = x$12._0;
          var match$22 = x$13[0];
          var exit$6 = 0;
          if (typeof match$22 === "number" || match$22.TAG !== /* Array */2) {
            exit$6 = 1;
          } else {
            var match$23 = match$22._0;
            if (match$23 && match$23.hd === 0) {
              var match$24 = match$23.tl;
              if (match$24) {
                var match$25 = match$24.hd;
                if (typeof match$25 === "number" || !(match$25.TAG === /* String */1 && match$25._0 === "1" && !(match$24.tl || x$13[1] !== ""))) {
                  exit$6 = 1;
                } else {
                  Ava.pass(t, undefined, undefined);
                }
              } else {
                exit$6 = 1;
              }
            } else {
              exit$6 = 1;
            }
          }
          if (exit$6 === 1) {
            Ava.fail(t, shouldNotPass(x$13), undefined);
          }
          
        } else {
          Ava.fail(t, shouldNotFail, undefined);
        }
        var x$14 = Parser.run(Json.json, "[false, true, 14.2]");
        if (x$14.TAG === /* Ok */0) {
          var x$15 = x$14._0;
          var match$26 = x$15[0];
          var exit$7 = 0;
          if (typeof match$26 === "number" || match$26.TAG !== /* Array */2) {
            exit$7 = 1;
          } else {
            var match$27 = match$26._0;
            if (match$27) {
              var match$28 = match$27.hd;
              if (typeof match$28 === "number" && match$28 >= 2) {
                var match$29 = match$27.tl;
                if (match$29 && match$29.hd === 1) {
                  var match$30 = match$29.tl;
                  if (match$30) {
                    var match$31 = match$30.hd;
                    if (typeof match$31 === "number" || !(match$31.TAG === /* Number */0 && match$31._0 === "14.2" && !(match$30.tl || x$15[1] !== ""))) {
                      exit$7 = 1;
                    } else {
                      Ava.pass(t, undefined, undefined);
                    }
                  } else {
                    exit$7 = 1;
                  }
                } else {
                  exit$7 = 1;
                }
              } else {
                exit$7 = 1;
              }
            } else {
              exit$7 = 1;
            }
          }
          if (exit$7 === 1) {
            Ava.fail(t, shouldNotPass(x$15), undefined);
          }
          
        } else {
          Ava.fail(t, shouldNotFail, undefined);
        }
        var x$16 = Parser.run(Json.json, "[      false,     true, 14.2]");
        if (x$16.TAG === /* Ok */0) {
          var x$17 = x$16._0;
          var match$32 = x$17[0];
          var exit$8 = 0;
          if (typeof match$32 === "number" || match$32.TAG !== /* Array */2) {
            exit$8 = 1;
          } else {
            var match$33 = match$32._0;
            if (match$33) {
              var match$34 = match$33.hd;
              if (typeof match$34 === "number" && match$34 >= 2) {
                var match$35 = match$33.tl;
                if (match$35 && match$35.hd === 1) {
                  var match$36 = match$35.tl;
                  if (match$36) {
                    var match$37 = match$36.hd;
                    if (typeof match$37 === "number" || !(match$37.TAG === /* Number */0 && match$37._0 === "14.2" && !(match$36.tl || x$17[1] !== ""))) {
                      exit$8 = 1;
                    } else {
                      Ava.pass(t, undefined, undefined);
                    }
                  } else {
                    exit$8 = 1;
                  }
                } else {
                  exit$8 = 1;
                }
              } else {
                exit$8 = 1;
              }
            } else {
              exit$8 = 1;
            }
          }
          if (exit$8 === 1) {
            Ava.fail(t, shouldNotPass(x$17), undefined);
          }
          
        } else {
          Ava.fail(t, shouldNotFail, undefined);
        }
        var x$18 = Parser.run(Json.json, "[      false,     true,\n\n  14.2]");
        if (x$18.TAG === /* Ok */0) {
          var x$19 = x$18._0;
          var match$38 = x$19[0];
          var exit$9 = 0;
          if (typeof match$38 === "number" || match$38.TAG !== /* Array */2) {
            exit$9 = 1;
          } else {
            var match$39 = match$38._0;
            if (match$39) {
              var match$40 = match$39.hd;
              if (typeof match$40 === "number" && match$40 >= 2) {
                var match$41 = match$39.tl;
                if (match$41 && match$41.hd === 1) {
                  var match$42 = match$41.tl;
                  if (match$42) {
                    var match$43 = match$42.hd;
                    if (typeof match$43 === "number" || !(match$43.TAG === /* Number */0 && match$43._0 === "14.2" && !(match$42.tl || x$19[1] !== ""))) {
                      exit$9 = 1;
                    } else {
                      Ava.pass(t, undefined, undefined);
                    }
                  } else {
                    exit$9 = 1;
                  }
                } else {
                  exit$9 = 1;
                }
              } else {
                exit$9 = 1;
              }
            } else {
              exit$9 = 1;
            }
          }
          if (exit$9 === 1) {
            Ava.fail(t, shouldNotPass(x$19), undefined);
          }
          
        } else {
          Ava.fail(t, shouldNotFail, undefined);
        }
        var x$20 = Parser.run(Json.json, "[1, [1, true, [3, null]]]");
        if (x$20.TAG !== /* Ok */0) {
          return Ava.fail(t, shouldNotFail, undefined);
        }
        var x$21 = x$20._0;
        var match$44 = x$21[0];
        if (typeof match$44 !== "number" && match$44.TAG === /* Array */2) {
          var match$45 = match$44._0;
          if (match$45) {
            var match$46 = match$45.hd;
            if (typeof match$46 !== "number" && match$46.TAG === /* Number */0 && match$46._0 === "1") {
              var match$47 = match$45.tl;
              if (match$47) {
                var match$48 = match$47.hd;
                if (typeof match$48 !== "number" && match$48.TAG === /* Array */2) {
                  var match$49 = match$48._0;
                  if (match$49) {
                    var match$50 = match$49.hd;
                    if (typeof match$50 !== "number" && match$50.TAG === /* Number */0 && match$50._0 === "1") {
                      var match$51 = match$49.tl;
                      if (match$51 && match$51.hd === 1) {
                        var match$52 = match$51.tl;
                        if (match$52) {
                          var match$53 = match$52.hd;
                          if (typeof match$53 !== "number" && match$53.TAG === /* Array */2) {
                            var match$54 = match$53._0;
                            if (match$54) {
                              var match$55 = match$54.hd;
                              if (typeof match$55 !== "number" && match$55.TAG === /* Number */0 && match$55._0 === "3") {
                                var match$56 = match$54.tl;
                                if (match$56 && match$56.hd === 0 && !match$56.tl && !match$52.tl && !match$47.tl && x$21[1] === "") {
                                  return Ava.pass(t, undefined, undefined);
                                }
                                
                              }
                              
                            }
                            
                          }
                          
                        }
                        
                      }
                      
                    }
                    
                  }
                  
                }
                
              }
              
            }
            
          }
          
        }
        return Ava.fail(t, shouldNotPass(x$21), undefined);
      }));

var P;

exports.P = P;
exports.run = run;
exports.shouldNotPass = shouldNotPass;
exports.shouldNotFail = shouldNotFail;
/*  Not a pure module */
